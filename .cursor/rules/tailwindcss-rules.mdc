---
alwaysApply: true
---

# TailwindCSS 커스텀 규칙

이 프로젝트는 TailwindCSS v4를 사용하며, 커스텀 스타일과 유틸리티를 정의해 사용하고 있습니다.

## 주요 커스텀 사항

### 1. 색상 시스템 (OKLCH)

- **모든 색상이 OKLCH 색공간을 사용**합니다
- `colors.css`에서 전체 색상 팔레트를 OKLCH로 정의
- 다크모드 지원을 위한 CSS 변수 기반 색상 시스템
- **실제 클래스명**: `bg-red-500`, `text-blue-600`, `border-gray-200` 등

### 2. 커스텀 유틸리티

#### DVH/DVW 단위

- **설정**: `@utility dvh-*`, `@utility dvw-*`로 정의
- **실제 클래스명**: `h-dvh-100`, `w-dvw-50` 등
- 모바일 브라우저의 주소창 변화에 대응

#### 확장된 Border Radius

- **설정**: `@theme`에서 `--radius-*` CSS 변수로 정의 (0, px, 1, 2, ..., 120)
- **실제 클래스명**: `rounded-0`, `rounded-px`, `rounded-1`, `rounded-2`, ..., `rounded-120`
- 기본 Tailwind보다 훨씬 세밀한 반지름 제어 가능

#### 커스텀 Variant

- **설정**: `@custom-variant`로 정의
- **실제 사용법**:
  - `first:mt-0`, `last:mb-0`: 첫 번째/마지막 요소 선택
  - `hocus:bg-primary`: hover와 focus 동시 적용
  - `nth-1:block`, `nth-2:hidden`: n번째 요소 선택
  - `nth-last-1:border-t`: 뒤에서 n번째 요소 선택

### 3. 폰트 시스템

- **기본 폰트**: 'Noto Sans KR' (한글 최적화)
- **코드 폰트**: 'Cascadia Code'
- **아이콘 폰트**: 'Font Awesome 5 Free'
- **실제 클래스명**: `font-sans` (커스텀됨), `font-code`, `font-fa`

### 4. 텍스트 크기 커스텀

- **설정**: `@theme`에서 `--text-*` CSS 변수로 정의
- **실제 클래스명**:
  - `text-xs`: 0.8rem
  - `text-sm`: 1rem
  - `text-md`: 1.2rem
  - `text-lg`: 1.4rem
  - `text-h1` ~ `text-h6`: 헤딩 크기 정의

## 주의사항

### ❌ 사용 금지

- **기본 Tailwind 색상 클래스 사용 금지** (기본 red-500, blue-600 등)
- **기본 radius 클래스 사용 금지** (기본 rounded-lg, rounded-xl 등)
- **기본 폰트 클래스 사용 금지** (font-sans는 커스텀됨)

### ✅ 권장 사용법

- **OKLCH 색상 사용**: `bg-red-500`, `text-blue-600` 등 (커스텀 OKLCH 팔레트)
- **커스텀 radius 사용**: `rounded-4`, `rounded-8`, `rounded-120` 등
- **DVH/DVW 단위 활용**: `h-dvh-100`, `w-dvw-50` 등
- **커스텀 variant 활용**: `first:mt-0`, `hocus:bg-primary` 등

### 🔧 개발 시 체크리스트

1. 색상 사용 시 OKLCH 팔레트 확인
2. 반지름 값은 `rounded-*` 클래스 사용 (설정은 `--radius-*`이지만 클래스는 `rounded-*`)
3. 뷰포트 단위는 DVH/DVW 우선 고려
4. 다크모드 대응 색상 변수 활용
5. 커스텀 variant로 복잡한 선택자 단순화

### 📁 관련 파일

- `app/_styles/tailwind.css`: 메인 설정
- `app/_styles/colors.css`: OKLCH 색상 팔레트
- `app/_styles/size/`: DVH, DVW, radius 유틸리티
- `app/_styles/variant/`: 커스텀 variant 정의

### ⚠️ 중요: 설정 vs 클래스명

- **설정 파일**: `--radius-*`, `--text-*` 등 CSS 변수로 정의
- **실제 클래스**: `rounded-*`, `text-*` 등 Tailwind 표준 명명 규칙 사용
- **@utility 정의**: `dvh-*`, `dvw-*` 등은 그대로 클래스명이 됨
